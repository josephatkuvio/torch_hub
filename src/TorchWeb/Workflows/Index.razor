@attribute [Authorize]
@page "/"
@using Torch.Web.Workflows.Tasks
@using Torch.Web.Pages


<section class="new-ui-section @(summaryCollapsed ? "collapsed" : "")">
    <section class="tab-section">
        <div class="tab-and-select">
            <ul class="tab-list">
                <li class="tab-item first-icon @(activeTab == "workflow" ? "active" : "")" @onclick='() => ChangeTab("workflow")'>
                    <a class='tab-link'>
                        <img src="/images/Flowchart.svg" />
                    </a>
                </li>
                <li class="tab-item @(activeTab == "tasks" ? "active" : "")" @onclick='() => ChangeTab("tasks")'>
                    <a class='tab-link'>
                        <img src="/images/ProgressIcon.svg" />
                    </a>
                </li>
                <li class="tab-item @(activeTab == "settings" ? "active" : "")" @onclick='() => ChangeTab("settings")'>
                    <a class='tab-link'>
                        <img src="/images/ManageIcon.svg" />
                    </a>
                </li>
            </ul>

            <WorkflowSwitcher SelectedWorkflowIdChanged="HandleSelectedWorkflowChange" />

            <Logout />
        </div>

        @if (CurrentWorkflow != null)
        {
            <section class="tab-content">
                @if (activeTab == "workflow")
                {
                    <WorkflowDetail Workflow="CurrentWorkflow" />
                }
                else if (activeTab == "tasks")
                {
                    <TaskList Workflow="CurrentWorkflow" />
                }
                else if (activeTab == "settings" && !showDetail)
                {
                    <NewUIManageWorkflow OnContentClick="ToggleShowDetail" />
                }
                else if (activeTab == "settings" && showDetail)
                {
                    <NewUIWorkflowDetail OnBackClick="ToggleShowDetail" />
                }
            </section>
        }
    </section>

    <section class="tab-section summary-section">
        <ul class="tab-list">
            <li class="tab-item summary active" @onclick="ToggleSummary">
                <a class="tab-link" name="summary">
                    <img src="/images/summaryIcon.svg" />
                </a>
            </li>
        </ul>
        <section class="tab-content collapsed-summary-tab-content">
            @if (!summaryCollapsed)
            {
                <NewUISummary />
            }
            else
            {
                <NewUICollapsedSummary />
            }
        </section>
    </section>

</section>


@code {
    [CascadingParameter] public User User { get; set; } = null!;

    Workflow? CurrentWorkflow;
    public SocketIOClient.SocketIO Socket { get; set; } = null!;

    private string activeTab = "workflow";
    private bool showDetail = false;
    private bool summaryCollapsed = false;

    protected override async Task OnParametersSetAsync()
    {
        if (CurrentWorkflow == null && User.CurrentWorkflowId != null)
            CurrentWorkflow = await Workflows.FindAsync(User.CurrentWorkflowId);

        //Socket = new SocketIOClient.SocketIO(Config["Blossom:Authority"]);
        //await Socket.ConnectAsync();
    }

    private async Task HandleSelectedWorkflowChange(int newWorkflowId)
    {
        if (User.WorkflowUsers != null)
        {
            foreach (var workflowUser in User.WorkflowUsers)
            {
                var matchingWorkflow = workflowUser.Workflow.Institution.Workflows.FirstOrDefault(w => w.Id == newWorkflowId);
                if (matchingWorkflow != null)
                {
                    CurrentWorkflow = matchingWorkflow; 
                    activeTab = "workflow"; 
                    break;
                }
            }
        }
    }

    private void ChangeTab(string tabName)
    {
        activeTab = tabName;
    }

    private void ToggleShowDetail()
    {
        showDetail = !showDetail;
    }

    private void ToggleSummary()
    {
        summaryCollapsed = !summaryCollapsed;
    }
}
