@using Microsoft.EntityFrameworkCore;
<div class="workflow-switcher">
    <select id="selected-workflow" value="@SelectedWorkflow.Id" @onchange="HandleSelectedWorkflowIdChanged">
        @foreach (var institution in AllWorkflows)
        {
            <optgroup label="@institution.Key">
                @foreach (var workflow in institution)
                {
                    <option value="@workflow.Id" selected="@(SelectedWorkflow.Id == workflow.Id)">@workflow.Name</option>
                }
            </optgroup>
            <hr />
        }
    </select>
</div>


@code {
    [CascadingParameter] public User User { get; set; } = null!;
    [Parameter] public EventCallback<int> SelectedWorkflowIdChanged { get; set; }
    [Parameter] public Workflow SelectedWorkflow { get; set; } = null!;
    List<IGrouping<Institution, Workflow>> AllWorkflows = new();

    protected override void OnInitialized()
    {
        AllWorkflows = Workflows.Query
            .Include(x => x.Institution)
            .Where(x => x.Users.Any(y => y.UserId == User.Id))
            .GroupBy(x => x.Institution)
            .ToList();
    }

    void HandleSelectedWorkflowIdChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int newWorkflowId))
        {
            SelectedWorkflowIdChanged.InvokeAsync(newWorkflowId);
        }
    }
}
