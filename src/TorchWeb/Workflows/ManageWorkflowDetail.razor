<section class="manage-detail-page-section">
    <header class="detailed-workflow-header">
        <div class="workflow-detail-header">
            <div class="header-left">
                <aside class="back" @onclick="HandleBackClick">
                    <img class="sort-icon-img" src="/images/backArrow.svg" />
                </aside>
                <h1>@SelectedConnection.Name</h1>
            </div>
            <div class="header-right">
                <button class="workflow-detail-buttons">
                    <img class="sort-icon-img edit-icon" src="/images/Edit save.svg" />
                </button>
                <button class="workflow-detail-buttons">
                    <img class="sort-icon-img trash-icon" src="/images/Trashcan.svg" />
                </button>
            </div>
        </div>
        <div class="header-bottom-text">
            <h4>Connection Type: @SelectedConnection.Direction</h4>
        </div>
    </header>


    ﻿<section class="workflow-connection-detail">

        <section class="library-card">
            <article class="lib-article">
                <div class="left">
                    <img class="sort-icon-img" src="/images/iIcon.svg" />
                    <h1>Would you like to import a connection from another workflow?</h1>
                </div>
                <div class="right">
                    <button class="more-btn" @onclick="OpenConnectionLibraryModal">Open Library</button>
                </div>
            </article>
        </section>

        <section class="workflow-connection-settings">
            <div class="title-left">
                <h1>Authentication</h1>
                <label>Select the type (Azure Blob, S3, or SFTP) and enter the host name and login credentials for this connection. Your password is stored securely and cannot be viewed again once entered.</label>
            </div>
            <div class="fields-right">
                <form>
                    <label>Connection Type</label>
                    <select @bind=SelectedConnection.ContainerType>
                        <option value="AzureBlobConnection">Azure Blob Storage</option>
                        <option value="AmazonS3Connection">Amazon S3</option>
                        <option value="SFTPConnection">SFTP</option>
                    </select>
                    
                    <label>Host</label>
                    <input type="text" placeholder="Host" @bind=SelectedConnection.Host />
                    <label>User Name</label>
                    <input type="text" placeholder="User Name" @bind=SelectedConnection.UserId />
                    <label>Password</label>
                    <div class="password-input">
                        <input type="@(showPassword ? "password" : "text")" placeholder="Password" @bind=password />
                        <button type="button" class="toggle-password-button" @onclick="TogglePasswordVisibility">
                            <i class="@(showPassword ? "fas fa-eye-slash" : "fas fa-eye")"></i>
                        </button>
                    </div>
                    <button type="submit">Confirm</button>
                </form>
            </div>
        </section>
    </section>
</section>


@inject IModalService Modal
@code {
    [Parameter] public Connection SelectedConnection { get; set; } = null!;
    [Parameter] public EventCallback OnDetailBackClick { get; set; }

    private bool showPassword = false;
    private string password = "";

    private async Task HandleBackClick()
    {
        await OnDetailBackClick.InvokeAsync();
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }


    async Task OpenConnectionLibraryModal()
    {
        var options = new ModalOptions()
            {
                HideHeader = true,
                //Position = ModalPosition.TopCenter,
                Size = ModalSize.Custom,
                SizeCustomClass = "custom-modal"
            };
        var modal = Modal.Show<ConnectionModal>("", options);
        await modal.Result;
    }
}