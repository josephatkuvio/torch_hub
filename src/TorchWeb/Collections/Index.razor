@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;
@attribute [Authorize]
@page "/"

<div class="collections-index">
    <header>
        <div class="nav-header">
            <h1>All Collections</h1>
            @if (User.IsInRole("admin") == true)
            {
                <h1 @onclick=Go class="nav-admin-opt">Admin Page</h1>
                <button @onclick=Add>Add New Collection</button>
            }
        </div>

        @if (User.Identity?.IsAuthenticated == true)
        {
            <h1>Hi!!!!! YOU ARE @User.Identity.Name AND YOU ARE IN ROLE @User.Claim(ClaimTypes.Role). YOUR CLAIMS ARE</h1>
            @foreach (var claim in User.Claims)
            {
                <p>@claim.Type: @claim.Value</p>
            }
            <p>ARE U IN THE ADMIN ROLE? @User.IsInRole("admin")</p>
            <p>ARE U IN THE SUPERVISOR ROLE? @User.IsInRole("supervisor")</p>
            <p>ARE U IN THE BASIC ROLE? @User.IsInRole("basic")</p>
            <p>Your email is: @User.Claim("email")</p>
            <p>Your institution_id is: @User.InstitutionId()</p>
            <p>Your user id is: @User.Claim(ClaimTypes.NameIdentifier)</p>
        }
    </header>

    @if (Model != null)
    {
        <section>
            @foreach (var collection in Model)
            {
                @if (collection.DeletedDate == null)
                {
                    <CollectionCard Collection="collection" />
                }
            }
        </section>
    }
</div>

@inject IModalService Modal
@inject AuthenticationStateProvider Auth
@code {
    [CascadingParameter] public ClaimsPrincipal User { get; set; } = null!;
    List<Collection>? Model;

    protected override void OnInitialized()
    {
        if (User.InstitutionId() == null)
            Modal.Show<Torch.Web.Institutions.AddInstitution>();
        else 
            Model = Collections.Query.Where(x => x.InstitutionId == User.InstitutionId()).ToList();
    }

    async Task Add()
    {
        var modal = Modal.Show<AddCollection>();
        await modal.Result;
        Model = Collections.Query.Where(x => x.InstitutionId == User.InstitutionId()).ToList();
    }

    void Go() => Nav.NavigateTo($"/admin-page");
}