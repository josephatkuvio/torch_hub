@using Microsoft.EntityFrameworkCore;
@inherits SparcModal

<div class="specimen-detail">
    @if (FullSpecimen != null)
    {
        <section class="tasks">
            @foreach (var run in FullSpecimen.TaskRuns.OrderBy(x => x.StartDate))
            {
                var derivatives = run.To<Dictionary<string, Derivative>>("Generate Derivatives");
                var json = run.ResultJson();
                <article>
                    <header>
                        <TaskCard Task="run.Task" />
                    </header>
                    <footer>
                        @if (derivatives != null)
                        {
                            <div class="images">
                                @foreach (var key in derivatives.Keys)
                                {
                                    var img = derivatives[key];
                                    <figure @onclick="@(() => Select(key))">
                                        <img src="@img!.url" alt="@key" />
                                        <figcaption>
                                            @key (@img.width x @img.height)
                                        </figcaption>
                                    </figure>
                                }
                            </div>
                        }
                        else if (json != null)
                        {
                            <dl class="results">
                                @foreach (var item in json.RootElement.EnumerateObject())
                                {
                                    <dt>@item.Name</dt>
                                    @if (item.Value.ToString()?.StartsWith("http") == true)
                                    {
                                        <dd>
                                            <a href="@item.Value.ToString()" target="_blank">@item.Value</a>
                                        </dd>
                                    }
                                    else
                                    {
                                        <dd>
                                            @item.Value
                                        </dd>
                                    }
                                }
                            </dl>
                        }
                        else
                        {
                            <aside>@run.Result</aside>
                        }
                    </footer>
                </article>
            }
        </section>
        <figure>
            <img src="@LargeImageSource" alt="@LargeImageAlt" />
        </figure>
    }
</div>

@inject IConfiguration Config
@code {
    [Parameter] public Specimen Specimen { get; set; } = null!;
    SpecimenImage? SelectedImage;
    Specimen? FullSpecimen;
    record Derivative(string url, int width, int height);

    protected override void OnInitialized()
    {
        FullSpecimen = Specimens.Query
            .Include(x => x.Images)
            .Include(x => x.TaskRuns)
            .ThenInclude(x => x.Task)
            .FirstOrDefault(x => x.Id == Specimen.Id);
    }

    string LargeImageSource => SelectedImage?.OutputFile ?? Specimen.InputFile;
    string LargeImageAlt => SelectedImage?.Size ?? Specimen.CatalogNumber ?? Specimen.CreateDate.ToString("d");

    void Select(string key)
    {
        SelectedImage = Specimen.Images.FirstOrDefault(x => x.Size == key);
    }
}
