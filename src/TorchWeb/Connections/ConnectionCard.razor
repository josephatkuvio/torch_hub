<article @onclick=Click>
    <img src="/images/folderIcon.svg" />
    <header>
        <h3>@Connection.Name</h3>
        <h4>@Connection.Direction | @(Connection.ContainerType.Replace("Connection", ""))</h4>
    </header>
    @if (Connection.Direction == "Input")
    {
        <label for="files" @onclick:stopPropagation=true>
            <img src="/images/upArrowIcon.svg" />
        </label>
        <InputFile id="files" @key=inputFileId OnChange="Upload" multiple accept="image/*,.dng" />
    }
</article>

@code {
    [Parameter] public Connection Connection { get; set; } = null!;
    [Parameter] public EventCallback<InputFileChangeEventArgs> OnUpload { get; set; }
    [Parameter] public EventCallback<Connection> OnClick { get; set; }
    
    string inputFileId = Guid.NewGuid().ToString();

    async Task Upload(InputFileChangeEventArgs e)
    {
        await OnUpload.InvokeAsync(e);
        inputFileId = Guid.NewGuid().ToString();
    }

    async Task Click(MouseEventArgs e) => await OnClick.InvokeAsync(Connection);
}
