@using Microsoft.AspNetCore.Components.Authorization;
@using Sparc.Blossom.Authentication;
@inherits LayoutComponentBase


<CascadingValue Value="User">
    <div class="main-layout">
        <main>
            @Body
        </main>
    </div>
    <CascadingBlazoredModal></CascadingBlazoredModal>
</CascadingValue>

@inject AuthenticationStateProvider Auth
@inject IRepository<User> Users
@code {
    User User = null!;
    protected override async Task OnInitializedAsync()
    {
        var auth = await Auth.GetAuthenticationStateAsync();
        if (auth?.User != null)
        {
            foreach (var claim in auth.User.Claims)
            {
                Console.WriteLine($"{claim.Type} = {claim.Value}");
            }
            //var email = auth.User.Get("name");
            //var identity = auth.User.Get("id");
            //var existing = Users.Query.FirstOrDefault(x => x.Email == email);
            //if (existing == null)
            //{
            //    existing = new(email);
            //    await Users.AddAsync(existing);
            //}
            //User = existing;
        }
    }
}


