@using Microsoft.AspNetCore.Components.Authorization;
@using Sparc.Blossom.Authentication;
@inherits LayoutComponentBase


<CascadingValue Value="User">
    <div class="main-layout">
        <main>
            @Body
        </main>
    </div>
    <CascadingBlazoredModal></CascadingBlazoredModal>
</CascadingValue>

@inject AuthenticationStateProvider Auth
@inject IRepository<User> Users
@code {
    User User = null!;
    protected override async Task OnInitializedAsync()
    {
        var user = await Auth.GetAuthenticationStateAsync();
        if (user?.User != null)
        {
            foreach (var claim in user.User.Claims)
            {
                Console.WriteLine($"{claim.Type} = {claim.Value}");
            }
            var email = user.User.Get("name");
            User = Users.Query.FirstOrDefault(x => x.Email == email);
            if (User == null)
            {
                User = new(email);
                //await Users.AddAsync(User);
            }
        }
    }
}


