<CascadingValue Value="Socket">
    <header class="workflow-header">
        <div class="header-left">
            <h1>All</h1>
        </div>
        <div class="header-right">
            <button class="sort-button">Sort</button>
            <img class="sort-icon-img" src="/images/sortIcon.svg" />
            <div class="search-box">
                <input type="text" placeholder="Search" />
                <i class="fa fa-search"></i>
            </div>
            <i class="sort"></i>
        </div>
    </header>
</CascadingValue>

<div class="divider"></div>

<section class="workflow-folders">
    <h2>Workflow</h2>
    <section class="workflow-cards">
        @foreach (var workflow in MyWorkflows)
        {
            <WorkflowCard Workflow="workflow" />
        }
    </section>
</section>

<div class="divider"></div>

<section class="specimens-list-cards">
    <h2>Recent Specimens</h2>
    <section class="spec-cards">
        <article class="spec-card">
            <div class="left">
                <img class="spec-img" src="/images/BRIT240602.jpg" />
                <h1>Specimen Name</h1>
            </div>
            <div class="right">
                <h1>Workflow Name</h1>
                <h1>06/20/2023</h1>
                @*<time>@Workflow.Create_date.ToString("MM/dd/yyyy")</time>*@
                <button class="more-btn">...</button>
            </div>
        </article>
    </section>
</section>

@inject IConfiguration Config
@code {
    List<Workflow> MyWorkflows = new();
    public SocketIOClient.SocketIO Socket { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        Socket = new SocketIOClient.SocketIO(Config["Blossom:Authority"]);
        await Socket.ConnectAsync();
        // Socket.On("specimen_added", response => RefreshSpecimens());

    }
}