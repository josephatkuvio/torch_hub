@page "/manage-page/{collectionId:int}"
@using Torch.Web.Users;

@if (IsAdmin || IsSupervisor)
{
    <div class="admin-div">
        <header>
            <aside class="back">
                <a href="/workflows/@Workflow.Id">&larr; Back</a>
            </aside>
            <h1 class="page-name">Manage Page</h1>
            <h1>@Workflow.Name</h1>
        </header>

        <div class="container">
            <div class="container-top">
                <div class="left">
                    <h2>Users List</h2>
                </div>
                <div class="right">
                    <button @onclick="OpenInviteModal">Invite Member</button>    @*is redirecting, but still not the correct invite*@
                </div>
            </div>
            <div class="container-body">
                    <table>

                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Role</th>
                            @if (IsAdmin)
                            {
                                <th></th>
                            }
                        </tr>
                        @foreach (var user in Workflow.Users)
                        {
                            @if ((IsAdmin || IsSupervisor) && user.Role == "basic")
                            {
                                @*<tr>
                                    <td>@user.First_Name @user.Last_name</td>
                                    <td>@user.Email</td>
                                    <td>@(user.Roles.FirstOrDefault()?.Name)</td>
                                    @if (User?.IsInRole("admin") == true)
                                    {
                                        <td class="btn"><button @onclick="() => RemoveUser(user.Id)">Remove Member</button></td>
                                    }
                                </tr>*@
                            }
                        }
                    </table>
                }
            </div>
        </div>
    </div>
}



@inject IModalService Modal
@inject IJSRuntime JSRuntime
@inject IRepository<Workflow> Workflows
@code {
    [CascadingParameter] public User User { get; set; }
    [Parameter] public Workflow Workflow { get; set; }
    bool IsAdmin;
    bool IsSupervisor;

protected override async Task OnInitializedAsync()
    {
        IsAdmin = User.IsInRole("admin", Workflow.Id);
        IsSupervisor = User.IsInRole("supervisor", Workflow.Id);
    }

    async Task OpenInviteModal()
    {
        var modal = Modal.Show<InviteUser>();
        await modal.Result;
    }

    //async Task RemoveUser(int userId)
    //{
    //    var confirm = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to remove this user from the collection?");
    //    if (confirm)
    //    {
    //        await TorchCommands.RemoveUserFromCollectionAsync(CollectionId, userId);
    //        await LoadCollectionUsers();
    //    }
    //}
}